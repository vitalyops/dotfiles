;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;
;;	   __  __                  __  ___          __      __         
;;	  / / / /_______  _____   /  |/  /___  ____/ /_  __/ /__  _____
;;	 / / / / ___/ _ \/ ___/  / /|_/ / __ \/ __  / / / / / _ \/ ___/
;;	/ /_/ (__  )  __/ /     / /  / / /_/ / /_/ / /_/ / /  __(__  ) 
;;	\____/____/\___/_/     /_/  /_/\____/\__,_/\__,_/_/\___/____/  
;; 
;; Created By Aditya Shakya @adi1090x
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/checknetwork]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/check-network

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
;;format = <label>
format-background = ${color.mb}
;;format-foreground = #000
format-padding = ${layout.module-padding}

; Available tokens:
;   %output%
; Default: %output%
;;label = %output:0:15:...%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = networkmanager_dmenu &
click-middle = networkmanager_dmenu &
click-right = networkmanager_dmenu &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/updates]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/updates.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
;;format = <label>
format-background = ${color.mb}
;;format-foreground = #000
format-padding = ${layout.module-padding}

; Available tokens:
;   %output%
; Default: %output%
;;label = %output:0:15:...%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = ~/.config/polybar/scripts/lupdates &
;;click-middle = ~/.config/polybar/scripts/lupdates &
;;click-right = ~/.config/polybar/scripts/lupdates &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/window_switch]
type = custom/text
content =  Switch

; "content" has the same properties as "format-NAME"
content-background = ${color.mb}
;;content-foreground = #fff
content-padding = ${layout.module-padding}

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = skippy-xd
click-middle = skippy-xd
click-right = ~/.config/polybar/scripts/windows

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = skippy-xd
;;scroll-down = skippy-xd

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/launcher]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
content-background = ${color.mb}
;;content-foreground = ${color.mf}
content-padding = ${layout.module-padding}

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/launcher
;;click-middle = ~/.config/polybar/scripts/launcher-full
click-right = ~/.config/polybar/scripts/launcher-alt

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/launcher-full
scroll-down = ~/.config/polybar/scripts/launcher-full

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/sysmenu]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
content-background = ${color.mb}
content-foreground = ${color.mf}
content-padding = ${layout.module-padding}

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/powermenu
;;click-middle = ~/.config/polybar/scripts/powermenu
click-right = ~/.config/polybar/scripts/powermenu-alt

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/powermenu
;;scroll-down = ~/.config/polybar/scripts/powermenu

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/powermenu]
type = custom/menus
; If true, <label-togdgle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = shutdown
menu-0-1-exec = menu-open-2

menu-1-0 = back
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = systemctl reboot

menu-2-0 = shutdown
menu-2-0-exec = systemctl poweroff
menu-2-1 = back
menu-2-1-exec = menu-open-0

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1 
format-background = ${color.mb}
format-padding = ${layout.module-padding}

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.ac}
label-close-foreground = ${color.ac}
label-separator-foreground = ${color.ac}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/menu]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 = Menu
menu-0-0-exec = ~/.config/polybar/scripts/launcher &
menu-0-1 = Files
menu-0-1-exec = nautilus &
menu-0-2 = Terminal
menu-0-2-exec = xfce4-terminal &
menu-0-3 = Browser
menu-0-3-exec = firefox &

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1 
format-background = ${color.mb}
format-padding = ${layout.module-padding}

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.mf}
label-close-foreground = ${color.mf}
label-separator-foreground = ${color.mf}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/colors-switch]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
content-background = ${color.mb}
;;content-foreground = ${color.bg}
content-padding = ${layout.module-padding}

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/color-switch.sh &
;;click-middle = ~/.config/polybar/scripts/color-switch.sh &
click-right = ~/.config/polybar/scripts/color-switch.sh &

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/scripts/powermenu
;;scroll-down = ~/.config/polybar/scripts/powermenu

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/decor-glyph]
type = custom/text
content-background = ${color.bg}
content-foreground = ${color.mgf}

[module/left-end-top]
inherit = module/decor-glyph
content = "%{T3}%{T-}"

[module/right-end-top]
inherit = module/decor-glyph
content = "%{T3}%{T-}"

[module/left-end-bottom]
inherit = module/decor-glyph
content = "%{T3}%{T-}"

[module/right-end-bottom]
inherit = module/decor-glyph
content = "%{T3}%{T-}"

;;for the spotify client
[module/blank]
type=custom/ipc
hook-0 = echo " "
format-background = #00000000
format-padding=1

[module/previous]
type = custom/script
interval = 86400
format = "%{T3}<label>"
;;custom
format-background = ${color.mb}
format-padding =1; ${layout.module-padding}
;;format-padding = 5
; Previous song icon
exec = echo ""
; Check if spotify is running before displaying the icon
exec-if = pgrep spotify
format-underline = #1db954
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"

[module/next]
type = custom/script
;;custom
format-background = ${color.mb}
format-padding =1; ${layout.module-padding}
;;
interval = 86400
format = "%{T3}<label>"
;format-padding = 5
; Next song icon
exec = echo ""
; Check if spotify is running before displaying the icon
;exec-if = pgrep spotify
format-underline = #1db954
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"

[module/playpause]
type = custom/ipc
;;custom
format-background = ${color.mb}
format-padding =1; ${layout.module-padding}
; Default
hook-0 = echo ""
; Playing
hook-1 = echo ""
; Paused
hook-2 = echo ""
initial = 1
format-underline = #1db954
line-size = 1
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"

[module/spotify]
type = custom/ipc
;;start
;;format = <label>
format-prefix-foreground = #28e04a
format-prefix = " "
format-background = ${color.mb}
format-padding = ${layout.module-padding}
;;end
hook-0 = echo "No Music" | lolcat
hook-1 = python3 ~/scripts/spotify/spotify_status.py | lolcat
initial = 1
#format-padding = 4
format-underline = #1db954
line-size = 1
; [i3wm only] - Uncomment the below line to focus on Spotify when clicking on the song name (credits to https://github.com/Esya)
click-left = i3-msg '[class="Spotify"] focus'

[module/pomobar]
type=custom/ipc
hook-0 = cat ~/.pomobaroutput
initial=1
click-left = python3 ~/src/scripts/pomobar.py --action=new &
click-middle= python3  ~/src/scripts/pomobar.py --action=kill &
click-right =python3 ~/src/scripts/pomobar.py --action=break &

[module/myvolume]
type = internal/volume

format-volume = <bar-volume>

label-volume = VOL
label-volume-foreground = ${root.foreground}

label-muted =  sound muted
label-muted-foreground = ${colors.gray}

bar-volume-width = 10
bar-volume-foreground-0 = ${colors.green}
bar-volume-foreground-1 = ${colors.green}
bar-volume-foreground-2 = ${colors.green}
bar-volume-foreground-3 = ${colors.green}
bar-volume-foreground-4 = ${colors.yellow}
bar-volume-foreground-5 = ${colors.red}
bar-volume-gradient = false
bar-volume-indicator = 
bar-volume-indicator-font = 4
bar-volume-indicator-foreground = ${colors.white}
bar-volume-fill = 
bar-volume-fill-font = 4
bar-volume-empty = 
bar-volume-empty-font = 4
bar-volume-empty-foreground = ${colors.gray}

[module/ownvolume]
type = internal/alsa

; Soundcard to be used
; Usually in the format hw:# where # is the card number
; You can find the different card numbers in `/proc/asound/cards`
;;master-soundcard = default
;;speaker-soundcard = default
;;headphone-soundcard = default

; Name of the master, speaker and headphone mixers
; Use the following command to list available mixer controls:
; $ amixer scontrols | sed -nr "s/.*'([[:alnum:]]+)'.*/\1/p"
; If master, speaker or headphone-soundcard isn't the default, 
; use `amixer -c # scontrols` instead where # is the number 
; of the master, speaker or headphone soundcard respectively
;
; Default: Master
;;master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
;;speaker-mixer = Speaker
; Default: none
;;headphone-mixer = Headphone

; NOTE: This is required if headphone_mixer is defined
; Use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; You may also need to use `amixer -c # controls` as above for the mixer names
; Default: none
;;headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
;;mapped = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
;;interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>
format-volume-background = ${color.mb}
format-volume-padding = ${layout.module-padding}

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
label-volume = %percentage:3%%

; Available tokens:
;   %percentage% (default)
format-muted-prefix = 
format-muted-background = ${color.mb}

label-muted = "Muted"
label-muted-foreground = ${color.ac}
label-muted-background = ${color.mb}
label-muted-padding = ${layout.module-padding}

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 =  
ramp-volume-2 = 
ramp-volume-3 =  
ramp-volume-4 =  
ramp-volume-5 = 

; Bar
bar-volume-format = ${layout.bar-format}

bar-volume-foreground-0 = ${color.bn}
bar-volume-foreground-1 = ${color.bn}
bar-volume-foreground-2 = ${color.bn}
bar-volume-foreground-3 = ${color.bm}
bar-volume-foreground-4 = ${color.bd}
bar-volume-foreground-5 = ${color.bd}

bar-volume-width = 6
bar-volume-gradient = false
bar-volume-fill = ${layout.bar-fill-icon}
bar-volume-indicator =
bar-volume-empty = ${layout.bar-fill-icon}
bar-volume-empty-foreground = ${color.be}

; If defined, it will replace <ramp-volume> when
; headphones are plugged in to `headphone_control_numid`
; If undefined, <ramp-volume> will be used for both
; Only applies if <ramp-volume> is used
ramp-headphones-0 = 
ramp-headphones-1 = 

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;	    __________  ______
;;	   / ____/ __ \/ ____/
;;	  / __/ / / / / /_    
;;	 / /___/ /_/ / __/    
;;	/_____/\____/_/       
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
